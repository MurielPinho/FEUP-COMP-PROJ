/* Parser.java */
/* Generated By:JavaCC: Do not edit this line. Parser.java */
import java.io.StringReader;

public class Parser implements ParserConstants {
    public Parser(StringReader stringReader) throws ParseException{

        //System.out.println("Write an arithmetic expression:");
                //Parser myProg = new Parser(System.in);
                /*SimpleNode root = */ Program(); // returns reference to root node

                //root.dump(""); // prints the tree on the screen

                //System.out.println("Expression value: "+myCalc.eval(root));
    }

  static final public void Program() throws ParseException {
    ImportDeclaration();
    ClassDeclaration();
    jj_consume_token(0);
  }

  static final public void ImportDeclaration() throws ParseException {
    label_1:
    while (true) {
      switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
      case 6:{
        ;
        break;
        }
      default:
        jj_la1[0] = jj_gen;
        break label_1;
      }
      jj_consume_token(6);
      switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
      case 7:{
        jj_consume_token(7);
        break;
        }
      default:
        jj_la1[1] = jj_gen;
        ;
      }
      jj_consume_token(IDENTIFIER);
      switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
      case 8:{
        jj_consume_token(8);
        jj_consume_token(IDENTIFIER);
        jj_consume_token(9);
        switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
        case IDENTIFIER:
        case 10:
        case 24:
        case 25:{
          switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
          case IDENTIFIER:
          case 24:
          case 25:{
            Type();
            break;
            }
          case 10:{
            jj_consume_token(10);
            break;
            }
          default:
            jj_la1[2] = jj_gen;
            jj_consume_token(-1);
            throw new ParseException();
          }
          label_2:
          while (true) {
            switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
            case 11:{
              ;
              break;
              }
            default:
              jj_la1[3] = jj_gen;
              break label_2;
            }
            jj_consume_token(11);
            switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
            case IDENTIFIER:
            case 24:
            case 25:{
              Type();
              break;
              }
            case 10:{
              jj_consume_token(10);
              break;
              }
            default:
              jj_la1[4] = jj_gen;
              jj_consume_token(-1);
              throw new ParseException();
            }
          }
          break;
          }
        default:
          jj_la1[5] = jj_gen;
          ;
        }
        jj_consume_token(12);
        switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
        case IDENTIFIER:
        case 10:
        case 24:
        case 25:{
          switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
          case IDENTIFIER:
          case 24:
          case 25:{
            Type();
            break;
            }
          case 10:{
            jj_consume_token(10);
            break;
            }
          default:
            jj_la1[6] = jj_gen;
            jj_consume_token(-1);
            throw new ParseException();
          }
          break;
          }
        default:
          jj_la1[7] = jj_gen;
          ;
        }
        break;
        }
      default:
        jj_la1[8] = jj_gen;
        ;
      }
      jj_consume_token(13);
    }
  }

  static final public void ClassDeclaration() throws ParseException {
    jj_consume_token(14);
    jj_consume_token(IDENTIFIER);
    switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
    case 15:{
      jj_consume_token(15);
      jj_consume_token(IDENTIFIER);
      break;
      }
    default:
      jj_la1[9] = jj_gen;
      ;
    }
    jj_consume_token(16);
    label_3:
    while (true) {
      switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
      case IDENTIFIER:
      case 24:
      case 25:{
        ;
        break;
        }
      default:
        jj_la1[10] = jj_gen;
        break label_3;
      }
      VarDeclaration();
    }
    label_4:
    while (true) {
      switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
      case 18:{
        ;
        break;
        }
      default:
        jj_la1[11] = jj_gen;
        break label_4;
      }
      MethodDeclaration();
    }
    jj_consume_token(17);
  }

  static final public void VarDeclaration() throws ParseException {
    Type();
    jj_consume_token(IDENTIFIER);
    jj_consume_token(13);
  }

  static final public void MethodDeclaration() throws ParseException {
    jj_consume_token(18);
    switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
    case IDENTIFIER:
    case 24:
    case 25:{
      Type();
      jj_consume_token(IDENTIFIER);
      jj_consume_token(9);
      switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
      case IDENTIFIER:
      case 24:
      case 25:{
        Type();
        jj_consume_token(IDENTIFIER);
        label_5:
        while (true) {
          switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
          case 11:{
            ;
            break;
            }
          default:
            jj_la1[12] = jj_gen;
            break label_5;
          }
          jj_consume_token(11);
          Type();
          jj_consume_token(IDENTIFIER);
        }
        break;
        }
      default:
        jj_la1[13] = jj_gen;
        ;
      }
      jj_consume_token(12);
      jj_consume_token(16);
      label_6:
      while (true) {
        switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
        case IDENTIFIER:
        case 24:
        case 25:{
          ;
          break;
          }
        default:
          jj_la1[14] = jj_gen;
          break label_6;
        }
        VarDeclaration();
      }
      label_7:
      while (true) {
        switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
        case IDENTIFIER:
        case INTEGERLITERAL:
        case 9:
        case 16:
        case 26:
        case 28:
        case 30:
        case 31:
        case 32:
        case 33:
        case 34:{
          ;
          break;
          }
        default:
          jj_la1[15] = jj_gen;
          break label_7;
        }
        Statement();
      }
      jj_consume_token(19);
      Expression();
      jj_consume_token(13);
      jj_consume_token(17);
      break;
      }
    case 7:{
      jj_consume_token(7);
      jj_consume_token(10);
      jj_consume_token(20);
      jj_consume_token(9);
      jj_consume_token(21);
      jj_consume_token(22);
      jj_consume_token(23);
      jj_consume_token(IDENTIFIER);
      jj_consume_token(12);
      jj_consume_token(16);
      label_8:
      while (true) {
        switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
        case IDENTIFIER:
        case 24:
        case 25:{
          ;
          break;
          }
        default:
          jj_la1[16] = jj_gen;
          break label_8;
        }
        VarDeclaration();
      }
      label_9:
      while (true) {
        switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
        case IDENTIFIER:
        case INTEGERLITERAL:
        case 9:
        case 16:
        case 26:
        case 28:
        case 30:
        case 31:
        case 32:
        case 33:
        case 34:{
          ;
          break;
          }
        default:
          jj_la1[17] = jj_gen;
          break label_9;
        }
        Statement();
      }
      jj_consume_token(17);
      break;
      }
    default:
      jj_la1[18] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
  }

  static final public void Type() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
    case 24:{
      jj_consume_token(24);
      switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
      case 22:{
        jj_consume_token(22);
        jj_consume_token(23);
        break;
        }
      default:
        jj_la1[19] = jj_gen;
        ;
      }
      break;
      }
    case 25:{
      jj_consume_token(25);
      break;
      }
    case IDENTIFIER:{
      jj_consume_token(IDENTIFIER);
      break;
      }
    default:
      jj_la1[20] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
  }

  static final public void Statement() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
    case 16:{
      jj_consume_token(16);
      label_10:
      while (true) {
        switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
        case IDENTIFIER:
        case INTEGERLITERAL:
        case 9:
        case 16:
        case 26:
        case 28:
        case 30:
        case 31:
        case 32:
        case 33:
        case 34:{
          ;
          break;
          }
        default:
          jj_la1[21] = jj_gen;
          break label_10;
        }
        Statement();
      }
      jj_consume_token(17);
      break;
      }
    case 26:{
      jj_consume_token(26);
      jj_consume_token(9);
      Expression();
      jj_consume_token(12);
      Statement();
      jj_consume_token(27);
      Statement();
      break;
      }
    case 28:{
      jj_consume_token(28);
      jj_consume_token(9);
      Expression();
      jj_consume_token(12);
      Statement();
      break;
      }
    case IDENTIFIER:
    case INTEGERLITERAL:
    case 9:
    case 30:
    case 31:
    case 32:
    case 33:
    case 34:{
      Expression();
      jj_consume_token(13);
      break;
      }{
      jj_consume_token(IDENTIFIER);
      switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
      case 29:{
        jj_consume_token(29);
        Expression();
        jj_consume_token(13);
        break;
        }
      case 22:{
        jj_consume_token(22);
        Expression();
        jj_consume_token(23);
        jj_consume_token(29);
        Expression();
        jj_consume_token(13);
        break;
        }
      default:
        jj_la1[22] = jj_gen;
        jj_consume_token(-1);
        throw new ParseException();
      }
      break;
      }
    default:
      jj_la1[23] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
  }

  static final public void Expression() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
    case INTEGERLITERAL:{
      jj_consume_token(INTEGERLITERAL);
      switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
      case 8:
      case 22:
      case 35:
      case 36:
      case 37:
      case 38:
      case 39:
      case 40:{
        SecondExpression();
        break;
        }
      default:
        jj_la1[24] = jj_gen;
        ;
      }
      break;
      }
    case 30:{
      jj_consume_token(30);
      switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
      case 8:
      case 22:
      case 35:
      case 36:
      case 37:
      case 38:
      case 39:
      case 40:{
        SecondExpression();
        break;
        }
      default:
        jj_la1[25] = jj_gen;
        ;
      }
      break;
      }
    case 31:{
      jj_consume_token(31);
      switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
      case 8:
      case 22:
      case 35:
      case 36:
      case 37:
      case 38:
      case 39:
      case 40:{
        SecondExpression();
        break;
        }
      default:
        jj_la1[26] = jj_gen;
        ;
      }
      break;
      }
    case IDENTIFIER:{
      jj_consume_token(IDENTIFIER);
      switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
      case 8:
      case 22:
      case 35:
      case 36:
      case 37:
      case 38:
      case 39:
      case 40:{
        SecondExpression();
        break;
        }
      default:
        jj_la1[27] = jj_gen;
        ;
      }
      break;
      }
    case 32:{
      jj_consume_token(32);
      switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
      case 8:
      case 22:
      case 35:
      case 36:
      case 37:
      case 38:
      case 39:
      case 40:{
        SecondExpression();
        break;
        }
      default:
        jj_la1[28] = jj_gen;
        ;
      }
      break;
      }
    case 33:{
      jj_consume_token(33);
      switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
      case 24:{
        jj_consume_token(24);
        jj_consume_token(22);
        Expression();
        jj_consume_token(23);
        SecondExpression();
        break;
        }
      case IDENTIFIER:{
        jj_consume_token(IDENTIFIER);
        jj_consume_token(9);
        jj_consume_token(12);
        switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
        case 8:
        case 22:
        case 35:
        case 36:
        case 37:
        case 38:
        case 39:
        case 40:{
          SecondExpression();
          break;
          }
        default:
          jj_la1[29] = jj_gen;
          ;
        }
        break;
        }
      default:
        jj_la1[30] = jj_gen;
        jj_consume_token(-1);
        throw new ParseException();
      }
      break;
      }
    case 34:{
      jj_consume_token(34);
      Expression();
      switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
      case 8:
      case 22:
      case 35:
      case 36:
      case 37:
      case 38:
      case 39:
      case 40:{
        SecondExpression();
        break;
        }
      default:
        jj_la1[31] = jj_gen;
        ;
      }
      break;
      }
    case 9:{
      jj_consume_token(9);
      Expression();
      jj_consume_token(12);
      switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
      case 8:
      case 22:
      case 35:
      case 36:
      case 37:
      case 38:
      case 39:
      case 40:{
        SecondExpression();
        break;
        }
      default:
        jj_la1[32] = jj_gen;
        ;
      }
      break;
      }
    default:
      jj_la1[33] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
  }

  static final public void SecondExpression() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:{
      switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
      case 35:{
        jj_consume_token(35);
        break;
        }
      case 36:{
        jj_consume_token(36);
        break;
        }
      case 37:{
        jj_consume_token(37);
        break;
        }
      case 38:{
        jj_consume_token(38);
        break;
        }
      case 39:{
        jj_consume_token(39);
        break;
        }
      case 40:{
        jj_consume_token(40);
        break;
        }
      default:
        jj_la1[34] = jj_gen;
        jj_consume_token(-1);
        throw new ParseException();
      }
      Expression();
      switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
      case 8:
      case 22:
      case 35:
      case 36:
      case 37:
      case 38:
      case 39:
      case 40:{
        SecondExpression();
        break;
        }
      default:
        jj_la1[35] = jj_gen;
        ;
      }
      break;
      }
    case 22:{
      jj_consume_token(22);
      Expression();
      jj_consume_token(23);
      switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
      case 8:
      case 22:
      case 35:
      case 36:
      case 37:
      case 38:
      case 39:
      case 40:{
        SecondExpression();
        break;
        }
      default:
        jj_la1[36] = jj_gen;
        ;
      }
      break;
      }
    case 8:{
      jj_consume_token(8);
      jj_consume_token(41);
      switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
      case 8:
      case 22:
      case 35:
      case 36:
      case 37:
      case 38:
      case 39:
      case 40:{
        SecondExpression();
        break;
        }
      default:
        jj_la1[37] = jj_gen;
        ;
      }
      break;
      }{
      jj_consume_token(8);
      jj_consume_token(IDENTIFIER);
      jj_consume_token(9);
      switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
      case IDENTIFIER:
      case INTEGERLITERAL:
      case 9:
      case 30:
      case 31:
      case 32:
      case 33:
      case 34:{
        Expression();
        label_11:
        while (true) {
          switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
          case 11:{
            ;
            break;
            }
          default:
            jj_la1[38] = jj_gen;
            break label_11;
          }
          jj_consume_token(11);
          Expression();
        }
        break;
        }
      default:
        jj_la1[39] = jj_gen;
        ;
      }
      jj_consume_token(12);
      switch ((jj_ntk==-1)?jj_ntk_f():jj_ntk) {
      case 8:
      case 22:
      case 35:
      case 36:
      case 37:
      case 38:
      case 39:
      case 40:{
        SecondExpression();
        break;
        }
      default:
        jj_la1[40] = jj_gen;
        ;
      }
      break;
      }
    default:
      jj_la1[41] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
  }

  static private boolean jj_initialized_once = false;
  /** Generated Token Manager. */
  static public ParserTokenManager token_source;
  static SimpleCharStream jj_input_stream;
  /** Current token. */
  static public Token token;
  /** Next token. */
  static public Token jj_nt;
  static private int jj_ntk;
  static private int jj_gen;
  static final private int[] jj_la1 = new int[42];
  static private int[] jj_la1_0;
  static private int[] jj_la1_1;
  static {
      jj_la1_init_0();
      jj_la1_init_1();
   }
   private static void jj_la1_init_0() {
      jj_la1_0 = new int[] {0x40,0x80,0x3000410,0x800,0x3000410,0x3000410,0x3000410,0x3000410,0x100,0x8000,0x3000010,0x40000,0x800,0x3000010,0x3000010,0xd4010230,0x3000010,0xd4010230,0x3000090,0x400000,0x3000010,0xd4010230,0x20400000,0xd4010230,0x400100,0x400100,0x400100,0x400100,0x400100,0x400100,0x1000010,0x400100,0x400100,0xc0000230,0x0,0x400100,0x400100,0x400100,0x800,0xc0000230,0x400100,0x400100,};
   }
   private static void jj_la1_init_1() {
      jj_la1_1 = new int[] {0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x7,0x0,0x7,0x0,0x0,0x0,0x7,0x0,0x7,0x1f8,0x1f8,0x1f8,0x1f8,0x1f8,0x1f8,0x0,0x1f8,0x1f8,0x7,0x1f8,0x1f8,0x1f8,0x1f8,0x0,0x7,0x1f8,0x1f8,};
   }

  /** Constructor with InputStream. */
  public Parser(java.io.InputStream stream) {
     this(stream, null);
  }
  /** Constructor with InputStream and supplied encoding */
  public Parser(java.io.InputStream stream, String encoding) {
    if (jj_initialized_once) {
      System.out.println("ERROR: Second call to constructor of static parser.  ");
      System.out.println("       You must either use ReInit() or set the JavaCC option STATIC to false");
      System.out.println("       during parser generation.");
      throw new Error();
    }
    jj_initialized_once = true;
    try { jj_input_stream = new SimpleCharStream(stream, encoding, 1, 1); } catch(java.io.UnsupportedEncodingException e) { throw new RuntimeException(e); }
    token_source = new ParserTokenManager(jj_input_stream);
    token = new Token();
    jj_ntk = -1;
    jj_gen = 0;
    for (int i = 0; i < 42; i++) jj_la1[i] = -1;
  }

  /** Reinitialise. */
  static public void ReInit(java.io.InputStream stream) {
     ReInit(stream, null);
  }
  /** Reinitialise. */
  static public void ReInit(java.io.InputStream stream, String encoding) {
    try { jj_input_stream.ReInit(stream, encoding, 1, 1); } catch(java.io.UnsupportedEncodingException e) { throw new RuntimeException(e); }
    token_source.ReInit(jj_input_stream);
    token = new Token();
    jj_ntk = -1;
    jj_gen = 0;
    for (int i = 0; i < 42; i++) jj_la1[i] = -1;
  }

  /** Constructor. */
  public Parser(java.io.Reader stream) {
    if (jj_initialized_once) {
      System.out.println("ERROR: Second call to constructor of static parser. ");
      System.out.println("       You must either use ReInit() or set the JavaCC option STATIC to false");
      System.out.println("       during parser generation.");
      throw new Error();
    }
    jj_initialized_once = true;
    jj_input_stream = new SimpleCharStream(stream, 1, 1);
    token_source = new ParserTokenManager(jj_input_stream);
    token = new Token();
    jj_ntk = -1;
    jj_gen = 0;
    for (int i = 0; i < 42; i++) jj_la1[i] = -1;
  }

  /** Reinitialise. */
  static public void ReInit(java.io.Reader stream) {
    jj_input_stream.ReInit(stream, 1, 1);
    token_source.ReInit(jj_input_stream);
    token = new Token();
    jj_ntk = -1;
    jj_gen = 0;
    for (int i = 0; i < 42; i++) jj_la1[i] = -1;
  }

  /** Constructor with generated Token Manager. */
  public Parser(ParserTokenManager tm) {
    if (jj_initialized_once) {
      System.out.println("ERROR: Second call to constructor of static parser. ");
      System.out.println("       You must either use ReInit() or set the JavaCC option STATIC to false");
      System.out.println("       during parser generation.");
      throw new Error();
    }
    jj_initialized_once = true;
    token_source = tm;
    token = new Token();
    jj_ntk = -1;
    jj_gen = 0;
    for (int i = 0; i < 42; i++) jj_la1[i] = -1;
  }

  /** Reinitialise. */
  public void ReInit(ParserTokenManager tm) {
    token_source = tm;
    token = new Token();
    jj_ntk = -1;
    jj_gen = 0;
    for (int i = 0; i < 42; i++) jj_la1[i] = -1;
  }

  static private Token jj_consume_token(int kind) throws ParseException {
    Token oldToken;
    if ((oldToken = token).next != null) token = token.next;
    else token = token.next = token_source.getNextToken();
    jj_ntk = -1;
    if (token.kind == kind) {
      jj_gen++;
      return token;
    }
    token = oldToken;
    jj_kind = kind;
    throw generateParseException();
  }


/** Get the next Token. */
  static final public Token getNextToken() {
    if (token.next != null) token = token.next;
    else token = token.next = token_source.getNextToken();
    jj_ntk = -1;
    jj_gen++;
    return token;
  }

/** Get the specific Token. */
  static final public Token getToken(int index) {
    Token t = token;
    for (int i = 0; i < index; i++) {
      if (t.next != null) t = t.next;
      else t = t.next = token_source.getNextToken();
    }
    return t;
  }

  static private int jj_ntk_f() {
    if ((jj_nt=token.next) == null)
      return (jj_ntk = (token.next=token_source.getNextToken()).kind);
    else
      return (jj_ntk = jj_nt.kind);
  }

  static private java.util.List<int[]> jj_expentries = new java.util.ArrayList<int[]>();
  static private int[] jj_expentry;
  static private int jj_kind = -1;

  /** Generate ParseException. */
  static public ParseException generateParseException() {
    jj_expentries.clear();
    boolean[] la1tokens = new boolean[42];
    if (jj_kind >= 0) {
      la1tokens[jj_kind] = true;
      jj_kind = -1;
    }
    for (int i = 0; i < 42; i++) {
      if (jj_la1[i] == jj_gen) {
        for (int j = 0; j < 32; j++) {
          if ((jj_la1_0[i] & (1<<j)) != 0) {
            la1tokens[j] = true;
          }
          if ((jj_la1_1[i] & (1<<j)) != 0) {
            la1tokens[32+j] = true;
          }
        }
      }
    }
    for (int i = 0; i < 42; i++) {
      if (la1tokens[i]) {
        jj_expentry = new int[1];
        jj_expentry[0] = i;
        jj_expentries.add(jj_expentry);
      }
    }
    int[][] exptokseq = new int[jj_expentries.size()][];
    for (int i = 0; i < jj_expentries.size(); i++) {
      exptokseq[i] = jj_expentries.get(i);
    }
    return new ParseException(token, exptokseq, tokenImage);
  }

  /** Enable tracing. */
  static final public void enable_tracing() {
  }

  /** Disable tracing. */
  static final public void disable_tracing() {
  }

}
