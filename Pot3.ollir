Pot3 {

	.construct Pot3().V {
		invokespecial(this, "<init>").V;
	}
	.method public func(num.i32).i32 {
		a.i32 :=.i32 0.i32;
		temp3.bool :=.bool 3.i32 <.i32 4.i32;
		temp2.bool :=.bool !.bool temp3.bool;
		temp4.bool :=.bool 1.bool &&.bool temp2.bool;
		temp1.bool :=.bool !.bool temp4.bool;
		temp5.bool :=.bool temp1.bool;
		if (temp5.bool ==.bool 0.bool) goto else1;
			num_aux.i32 :=.i32 a.i32;
			goto endif1;
		else1:
			num_aux.i32 :=.i32 0.i32;
		endif1:
			temp6.bool :=.bool $1.num.i32 <.i32 1.i32;
			if (temp6.bool ==.bool 0.bool) goto else2;
				temp7.bool :=.bool 1.i32 <.i32 3.i32;
				if (temp7.bool ==.bool 0.bool) goto else3;
					num_aux.i32 :=.i32 1.i32;
					goto endif3;
				else3:
					num_aux.i32 :=.i32 a.i32;
				endif3:
					goto endif2;
			else2:
				temp8.i32 :=.i32 2.i32 *.i32 2.i32;
				temp9.i32 :=.i32 1.i32 +.i32 temp8.i32;
				temp10.i32 :=.i32 temp9.i32 *.i32 5.i32;
				num_aux.i32 :=.i32 temp10.i32;
			endif2:
				temp11.bool :=.bool 2.i32 <.i32 1.i32;
				if (temp11.bool ==.bool 0.bool) goto else4;
					num_aux.i32 :=.i32 3.i32;
					goto endif4;
				else4:
					num_aux.i32 :=.i32 4.i32;
				endif4:
				ret.i32 num_aux.i32;
	}
}